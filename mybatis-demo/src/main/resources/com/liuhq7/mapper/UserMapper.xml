<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.liuhq7.mapper.UserMapper">

    <!--查询-->
    <!--数据库表的字段名称和实体属性名称不一样，则不能自动封装数据-->
    <!--可通过起别名解决-->
    <!--
    <select id="selectAll" resultType="com.liuhq7.pojo.User">
        select id, name, password, address, age, sex, dept_id as deptId from user;
    </select>
    -->

    <!--还可使用resultMap-->
    <resultMap id="userResultMap" type="com.liuhq7.pojo.User">
            <result column="dept_id" property="deptId" />
    </resultMap>

    <select id="selectAll" resultMap="userResultMap">
        select * from user;
    </select>

    <!--条件查询-->
    <!--
    参数占位符：
        #{}：会将其替换为？，为防止SQL注入
        ${}：只拼接sql语句
    参数类型：
        parameterType可以省略
    特殊字符处理：
        转义字符
        CDATA区
    -->

    <select id="selectById" parameterType="int" resultMap="userResultMap">
        select * from user where id = #{id};
    </select>

    <!--&lt;为<的转义字符-->
    <!--
    <select id="selectById" resultMap="userResultMap">
        select * from user where id &lt; #{id};
    </select>
    -->

    <!--使用CDATA区-->
    <!--
    <select id="selectById" resultMap="userResultMap">
        select * from user where id <![CDATA[<]]> #{id};
    </select>
    -->

    <!--多条件查询-->
    <!--
    <select id="selectByCondition" resultMap="userResultMap">
        select * from user where name like #{name} and address = #{address} and age = #{age};
    </select>
    -->

    <!--多条件动态查询-->
    <!--
    if：条件判断
    test：逻辑表达式
    注意and问题，添加恒等式解决，或使用<where>替换where关键字
    -->
    <select id="selectByCondition" resultMap="userResultMap">
        select *
        from user
        <!--where 1 = 1-->
        <where>
            <if test="name != '' and name != null">
                and name like #{name}
            </if>
            <if test="address != '' and address != null">
                and address = #{address}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
        </where>
    </select>

    <!--单条件动态查询-->
    <!--
    choose：相当于switch
    when：相当于case
    otherwise：相当于default
    -->
    <select id="selectByConditionSingle" resultMap="userResultMap">
        select *
        from user
        <where>
            <choose>
                <when test="name != '' and name != null">
                    name like #{name}
                </when>
                <when test="address != '' and address != null">
                    and address = #{address}
                </when>
                <when test="age != null">
                    and age = #{age}
                </when>
                <otherwise>
                    1 = 1
                </otherwise>
            </choose>
        </where>
    </select>

    <!--添加-->
    <!--主键返回-->
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into user (name, password, address, age, sex, dept_id)
        values (#{name}, #{password}, #{address}, #{age}, #{sex}, #{deptId});
    </insert>

    <!--修改-->
    <!--使用if条件判断实现动态修改-->
    <!--注意语法问题,使用<set>代替set关键字-->
    <update id="update">
        update user
        <set>
            <if test="name != '' and name != null">
                name = #{name},
            </if>
            <if test="password != '' and password != null">
                password = #{password},
            </if>
            <if test="address != '' and address != null">
                address = #{address},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="sex != '' and sex != null">
                sex = #{sex},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId}
            </if>
        </set>
        where id = #{id};
    </update>

    <!--根据id删除-->
    <delete id="deleteById">
        delete from user where id = #{id};
    </delete>

    <!--
    mybatis会将数组参数封装为一个Map集合：
        默认key的名称为array
        使用@Param注解改变默认名称array
    -->
    <!--
    foreach：相当于for循环
    item：相当于每次迭代获得数组中的值
    使用separator分隔符解决语法问题
    -->
    <delete id="deleteByIds">
        delete from user where id in (
        <foreach collection="ids" item="id" separator=",">
            #{id}
        </foreach>
        );
    </delete>

</mapper>